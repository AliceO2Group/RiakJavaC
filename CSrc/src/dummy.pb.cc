// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dummy.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dummy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace objects {

namespace {

const ::google::protobuf::Descriptor* DummyObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DummyObject_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dummy_2eproto() {
  protobuf_AddDesc_dummy_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dummy.proto");
  GOOGLE_CHECK(file != NULL);
  DummyObject_descriptor_ = file->message_type(0);
  static const int DummyObject_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DummyObject, firststring_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DummyObject, secondstring_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DummyObject, firstint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DummyObject, secondint_),
  };
  DummyObject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DummyObject_descriptor_,
      DummyObject::default_instance_,
      DummyObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DummyObject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DummyObject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DummyObject));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dummy_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DummyObject_descriptor_, &DummyObject::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dummy_2eproto() {
  delete DummyObject::default_instance_;
  delete DummyObject_reflection_;
}

void protobuf_AddDesc_dummy_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013dummy.proto\022\007objects\"]\n\013DummyObject\022\023\n"
    "\013firstString\030\001 \002(\t\022\024\n\014secondString\030\002 \002(\t"
    "\022\020\n\010firstInt\030\003 \001(\005\022\021\n\tsecondInt\030\004 \001(\005", 117);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dummy.proto", &protobuf_RegisterTypes);
  DummyObject::default_instance_ = new DummyObject();
  DummyObject::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dummy_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dummy_2eproto {
  StaticDescriptorInitializer_dummy_2eproto() {
    protobuf_AddDesc_dummy_2eproto();
  }
} static_descriptor_initializer_dummy_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int DummyObject::kFirstStringFieldNumber;
const int DummyObject::kSecondStringFieldNumber;
const int DummyObject::kFirstIntFieldNumber;
const int DummyObject::kSecondIntFieldNumber;
#endif  // !_MSC_VER

DummyObject::DummyObject()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:objects.DummyObject)
}

void DummyObject::InitAsDefaultInstance() {
}

DummyObject::DummyObject(const DummyObject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:objects.DummyObject)
}

void DummyObject::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  firststring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secondstring_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firstint_ = 0;
  secondint_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DummyObject::~DummyObject() {
  // @@protoc_insertion_point(destructor:objects.DummyObject)
  SharedDtor();
}

void DummyObject::SharedDtor() {
  if (firststring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete firststring_;
  }
  if (secondstring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete secondstring_;
  }
  if (this != default_instance_) {
  }
}

void DummyObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DummyObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DummyObject_descriptor_;
}

const DummyObject& DummyObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dummy_2eproto();
  return *default_instance_;
}

DummyObject* DummyObject::default_instance_ = NULL;

DummyObject* DummyObject::New() const {
  return new DummyObject;
}

void DummyObject::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<DummyObject*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(firstint_, secondint_);
    if (has_firststring()) {
      if (firststring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        firststring_->clear();
      }
    }
    if (has_secondstring()) {
      if (secondstring_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        secondstring_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DummyObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:objects.DummyObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string firstString = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firststring()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->firststring().data(), this->firststring().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "firststring");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_secondString;
        break;
      }

      // required string secondString = 2;
      case 2: {
        if (tag == 18) {
         parse_secondString:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secondstring()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->secondstring().data(), this->secondstring().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "secondstring");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_firstInt;
        break;
      }

      // optional int32 firstInt = 3;
      case 3: {
        if (tag == 24) {
         parse_firstInt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &firstint_)));
          set_has_firstint();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_secondInt;
        break;
      }

      // optional int32 secondInt = 4;
      case 4: {
        if (tag == 32) {
         parse_secondInt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &secondint_)));
          set_has_secondint();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:objects.DummyObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:objects.DummyObject)
  return false;
#undef DO_
}

void DummyObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:objects.DummyObject)
  // required string firstString = 1;
  if (has_firststring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->firststring().data(), this->firststring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "firststring");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->firststring(), output);
  }

  // required string secondString = 2;
  if (has_secondstring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secondstring().data(), this->secondstring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secondstring");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->secondstring(), output);
  }

  // optional int32 firstInt = 3;
  if (has_firstint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->firstint(), output);
  }

  // optional int32 secondInt = 4;
  if (has_secondint()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->secondint(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:objects.DummyObject)
}

::google::protobuf::uint8* DummyObject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:objects.DummyObject)
  // required string firstString = 1;
  if (has_firststring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->firststring().data(), this->firststring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "firststring");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->firststring(), target);
  }

  // required string secondString = 2;
  if (has_secondstring()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secondstring().data(), this->secondstring().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secondstring");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->secondstring(), target);
  }

  // optional int32 firstInt = 3;
  if (has_firstint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->firstint(), target);
  }

  // optional int32 secondInt = 4;
  if (has_secondint()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->secondint(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:objects.DummyObject)
  return target;
}

int DummyObject::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string firstString = 1;
    if (has_firststring()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->firststring());
    }

    // required string secondString = 2;
    if (has_secondstring()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secondstring());
    }

    // optional int32 firstInt = 3;
    if (has_firstint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->firstint());
    }

    // optional int32 secondInt = 4;
    if (has_secondint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->secondint());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DummyObject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DummyObject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DummyObject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DummyObject::MergeFrom(const DummyObject& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_firststring()) {
      set_firststring(from.firststring());
    }
    if (from.has_secondstring()) {
      set_secondstring(from.secondstring());
    }
    if (from.has_firstint()) {
      set_firstint(from.firstint());
    }
    if (from.has_secondint()) {
      set_secondint(from.secondint());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DummyObject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DummyObject::CopyFrom(const DummyObject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DummyObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void DummyObject::Swap(DummyObject* other) {
  if (other != this) {
    std::swap(firststring_, other->firststring_);
    std::swap(secondstring_, other->secondstring_);
    std::swap(firstint_, other->firstint_);
    std::swap(secondint_, other->secondint_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DummyObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DummyObject_descriptor_;
  metadata.reflection = DummyObject_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace objects

// @@protoc_insertion_point(global_scope)
